"""
Django settings for NovskyProject project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
from datetime import datetime as dt
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECURITY WARNING: don't run with debug turned on in production!
ENV = os.environ.get("DJANGO_ENV", "DEV")
CONFIGS = {
    "PROD": {"DEBUG": True, "USE_LOCAL_DB": False, "ENV": "PROD"},
    "DEV": {"DEBUG": True, "USE_LOCAL_DB": True, "ENV": "DEV"},
}
CURRENT_CONFIG = CONFIGS.get(ENV)
USE_LOCAL_DB = CURRENT_CONFIG.get("USE_LOCAL_DB", False)

if ENV == "PROD":
    SECRET_KEY = os.environ["SECRET_KEY"]
else:
    SECRET_KEY = "testkey123**&&&;lkajsdflkj"

DEBUG = CURRENT_CONFIG["DEBUG"]

ALLOWED_HOSTS = ["web", "localhost", "visuals.novskytech.com"]


INSTALLED_APPS = [
    "visuals.apps.VisualsConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "markdownx",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


ROOT_URLCONF = "NovskyProject.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "visuals.context_processors.django_settings",
            ],
        },
    },
]

WSGI_APPLICATION = "NovskyProject.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

if USE_LOCAL_DB is False:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": "database1",
            "USER": "novskyproject",
            "PASSWORD": os.environ["PG_PASSWORD"],
            "HOST": os.environ["PG_URL"],
            "PORT": 5432,
            "TEST": {"NAME": f"testdb_{dt.now()}"},
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

CSRF_TRUSTED_ORIGINS = ["http://localhost:4005", "http://visuals.novskytech.com"]


REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
}
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticprod")
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
